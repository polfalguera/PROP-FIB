package FONTS.Presentacio;


import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Locale;
/**
 * Aquesta vista és l’encarregada de mostrar finestra de benvinguda.
 */
public class WelcomeView extends JFrame {
    /** Instancia del controlador de presentacio */
    private ControladorPresentacio iCtrlPresentacio;
    /** Panell on s'inclou tots els elements de la finestra principal */
    private JPanel welcomePanel;
    /** Text de benvinguda*/
    private JLabel textBenvinguda;
    /** Boto per iniciar l'aplicacio */
    private JButton iniciarButton;
    /** Boto per tancar l'aplicio */
    private JButton sortirButton;

    /**
     * Assigna els listeners als components corresponents.
     */
    public void initializeListeners() {
        iniciarButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                iCtrlPresentacio.carregarVistaPrincipal();
            }
        });
        sortirButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.exit(0);
            }
        });
    }
    /**
     * Constructora de la finestra de benvinguda
     * @param title text que mostra a dalt de la finestra principal
     * @param pCtrlPresentacio representa la instancia de CtrlPresentacio
     * */
    public WelcomeView(String title, ControladorPresentacio pCtrlPresentacio) {
        super(title);
        iCtrlPresentacio = pCtrlPresentacio;

        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setContentPane(welcomePanel);
        this.pack();
        this.setSize(750, 500);
        setLocationRelativeTo(null);

        initializeListeners();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        welcomePanel = new JPanel();
        welcomePanel.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        welcomePanel.setBackground(new Color(-4077363));
        textBenvinguda = new JLabel();
        Font textBenvingudaFont = this.$$$getFont$$$("Eras Demi ITC", -1, 26, textBenvinguda.getFont());
        if (textBenvingudaFont != null) textBenvinguda.setFont(textBenvingudaFont);
        textBenvinguda.setText("Benvingut a Gestor de Documents!");
        welcomePanel.add(textBenvinguda, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(422, 196), null, 0, false));
        iniciarButton = new JButton();
        iniciarButton.setText("Iniciar");
        welcomePanel.add(iniciarButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        sortirButton = new JButton();
        sortirButton.setText("Sortir");
        welcomePanel.add(sortirButton, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return welcomePanel;
    }

}
